"use strict";(self.webpackChunkwasmbox_docs=self.webpackChunkwasmbox_docs||[]).push([[4208],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),m=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,b=c["".concat(l,".").concat(u)]||c[u]||d[u]||i;return a?n.createElement(b,o(o({ref:t},p),{},{components:a})):n.createElement(b,o({ref:t},p))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6091:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const i={title:"What Is WebAssembly?",sidebar_position:1},o=void 0,s={unversionedId:"getting_started/wasmintro",id:"getting_started/wasmintro",title:"What Is WebAssembly?",description:"WebAssembly (WASM) is a new type of low-level binary format, like assembly language, designed to be run in a virtual machine. Compiled languages such as C, C++ and Rust can be compiled directly to WebAssembly and run inside the sandbox, providing high performance, deterministic execution, portability across different platforms, and protection against malicious code.",source:"@site/docs/getting_started/wasmintro.md",sourceDirName:"getting_started",slug:"/getting_started/wasmintro",permalink:"/wasmbox/getting_started/wasmintro",draft:!1,editUrl:"https://github.com/Placeholder-Software/Wasmbox/tree/master/docs/getting_started/wasmintro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"What Is WebAssembly?",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/wasmbox/getting_started/"},next:{title:"Platform Support",permalink:"/wasmbox/getting_started/platforms"}},l={},m=[{value:"Benefits Of WebAssembly",id:"benefits-of-webassembly",level:2}],p={toc:m};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/WebAssembly"},(0,r.kt)("strong",{parentName:"a"},"WebAssembly"))," (WASM) is a new type of low-level binary format, like assembly language, designed to be run in a virtual machine. Compiled languages such as C, C++ and Rust can be compiled directly to WebAssembly and run inside the sandbox, providing high performance, deterministic execution, portability across different platforms, and protection against malicious code."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Wasmbox")," provides a complete WebAssembly runtime for Unity (based on the ",(0,r.kt)("a",{parentName:"p",href:"https://wasmtime.dev/"},"Wasmtime")," engine) which can be used to run non-C# code on ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/wasmbox/getting_started/platforms"},"many platforms")),", to ",(0,r.kt)("strong",{parentName:"p"},"sandbox")," malicious or potentially buggy code (e.g. mods) and to provide ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/wasmbox/advanced/determinism"},"deterministic execution"))," (e.g. lockstep multiplayer)."),(0,r.kt)("h2",{id:"benefits-of-webassembly"},"Benefits Of WebAssembly"),(0,r.kt)("p",null,"WebAssembly is an official W3C standard, completely described in ",(0,r.kt)("a",{parentName:"p",href:"https://webassembly.github.io/spec/core/intro/introduction.html"},"this specification"),". This is a very large and complex document which you do ",(0,r.kt)("em",{parentName:"p"},"not")," need to completely understand to benefit from using WebAssembly and Wasmbox! Instead the main benefits of WebAssembly can be understood from the initial ",(0,r.kt)("a",{parentName:"p",href:"https://webassembly.github.io/spec/core/intro/introduction.html#design-goals"},"design goals"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Fast"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"None of the other benefits matter if WASM is too slow to use!"),(0,r.kt)("li",{parentName:"ul"},'WASM is designed for "near native" performance, currently achieving around 0.75x native speed ',(0,r.kt)("a",{parentName:"li",href:"https://programming-language-benchmarks.vercel.app/wasm-vs-csharp"},"in benchmarks"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Safe/Secure"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"All WASM code is validated and executes in a completely memory-safe sandbox."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"No program")," can break out and access anything outside of the sandbox."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Deterministic"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"WASM code execution is deterministic, producing the same results every time no matter what hardware it is running on."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/wasmbox/advanced/determinism"},"Read more")," about guaranteed determinism in Wasmbox."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cross Platform"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The same WASM code can be used on ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/wasmbox/getting_started/platforms"},"many platforms")),"."),(0,r.kt)("li",{parentName:"ul"},"Avoid compiling native dependencies for all ",(0,r.kt)("a",{parentName:"li",href:"https://support.unity.com/hc/en-us/articles/206336795-What-platforms-are-supported-by-Unity-"},"20+ Unity platforms")," by compiling just to WASM."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Open"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The WebAssembly System Interface (WASI) ",(0,r.kt)("a",{parentName:"li",href:"https://wasi.dev/"},"specification")," extends WASM with safe/secure ways to access resources (e.g. the filesystem)."),(0,r.kt)("li",{parentName:"ul"},'Wasmbox includes an implementation of WASI, including a complete "Virtual File System" (in memory).')))))}c.isMDXComponent=!0}}]);