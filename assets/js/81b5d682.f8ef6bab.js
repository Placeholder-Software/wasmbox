"use strict";(self.webpackChunkwasmbox_docs=self.webpackChunkwasmbox_docs||[]).push([[8644],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=m(n),h=r,u=d["".concat(l,".").concat(h)]||d[h]||p[h]||i;return n?a.createElement(u,o(o({ref:t},c),{},{components:n})):a.createElement(u,o({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={title:"Dynamic WASM Asset",sidebar_position:3},o=void 0,s={unversionedId:"reference/code/dynamicwasmasset",id:"reference/code/dynamicwasmasset",title:"Dynamic WASM Asset",description:"DynamicWasmAsset is an implementation of IWasmAsset which allows loading of arbitrary data as WASM/WAT code at runtime. Read more about runtime loading of WASM.",source:"@site/docs/reference/code/dynamicwasmasset.md",sourceDirName:"reference/code",slug:"/reference/code/dynamicwasmasset",permalink:"/wasmbox/reference/code/dynamicwasmasset",draft:!1,editUrl:"https://github.com/Placeholder-Software/Wasmbox/tree/master/docs/reference/code/dynamicwasmasset.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Dynamic WASM Asset",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"IWasmAsset",permalink:"/wasmbox/reference/code/iwasmasset"},next:{title:"Engine Config",permalink:"/wasmbox/reference/code/engineconfig"}},l={},m=[{value:"Properties",id:"properties",level:2},{value:"<code>CacheKey</code>",id:"cachekey",level:3},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>FromWASM(string name, byte[] bytes, string? cacheKey = null)</code>",id:"fromwasmstring-name-byte-bytes-string-cachekey--null",level:3},{value:"<code>FromWAT(string name, string wat, string? cacheKey = null)</code>",id:"fromwatstring-name-string-wat-string-cachekey--null",level:3},{value:"<code>FromPathWASM(string name, string path, string? cacheKey = null)</code>",id:"frompathwasmstring-name-string-path-string-cachekey--null",level:3},{value:"<code>FromPathWAT(string name, string wat, string? cacheKey = null)</code>",id:"frompathwatstring-name-string-wat-string-cachekey--null",level:3}],c={toc:m};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DynamicWasmAsset")," is an implementation of ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/iwasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"IWasmAsset"))," which allows loading of arbitrary data as WASM/WAT code at runtime. ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/advanced/runtime_wasm_loading"},"Read more")," about runtime loading of WASM."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"cachekey"},(0,r.kt)("inlineCode",{parentName:"h3"},"CacheKey")),(0,r.kt)("p",null,"If non-null the ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/module"},(0,r.kt)("inlineCode",{parentName:"a"},"Module")),"s loaded from this asset will be cached with this key. Any later loads from an asset with the same CacheKey & ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/engineconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"EngineConfig"))," will load the same module."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Creating multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"DynamicWasmAsset"),"s with the same ",(0,r.kt)("inlineCode",{parentName:"p"},"CacheKey")," but different WASM/WAT code will lead to unpredictable behaviour!")),(0,r.kt)("h2",{id:"static-methods"},"Static Methods"),(0,r.kt)("h3",{id:"fromwasmstring-name-byte-bytes-string-cachekey--null"},(0,r.kt)("inlineCode",{parentName:"h3"},"FromWASM(string name, byte[] bytes, string? cacheKey = null)")),(0,r.kt)("p",null,"Create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"DynamicWasAsset")," from the given WASM bytes. The ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," sets the ",(0,r.kt)("inlineCode",{parentName:"p"},"Name")," of the ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/module"},(0,r.kt)("inlineCode",{parentName:"a"},"Module"))," created from this asset."),(0,r.kt)("h3",{id:"fromwatstring-name-string-wat-string-cachekey--null"},(0,r.kt)("inlineCode",{parentName:"h3"},"FromWAT(string name, string wat, string? cacheKey = null)")),(0,r.kt)("p",null,"Create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"DynamicWasAsset")," from the given ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format"},"WAT")," text. The ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," sets the ",(0,r.kt)("inlineCode",{parentName:"p"},"Name")," of the ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/module"},(0,r.kt)("inlineCode",{parentName:"a"},"Module"))," created from this asset."),(0,r.kt)("h3",{id:"frompathwasmstring-name-string-path-string-cachekey--null"},(0,r.kt)("inlineCode",{parentName:"h3"},"FromPathWASM(string name, string path, string? cacheKey = null)")),(0,r.kt)("p",null,"Invoke ",(0,r.kt)("inlineCode",{parentName:"p"},"FromWASM")," with all of the bytes from the file at the given path."),(0,r.kt)("h3",{id:"frompathwatstring-name-string-wat-string-cachekey--null"},(0,r.kt)("inlineCode",{parentName:"h3"},"FromPathWAT(string name, string wat, string? cacheKey = null)")),(0,r.kt)("p",null,"Invoke ",(0,r.kt)("inlineCode",{parentName:"p"},"FromWAT")," with all of the text from the file at the given path."))}d.isMDXComponent=!0}}]);