"use strict";(self.webpackChunkwasmbox_docs=self.webpackChunkwasmbox_docs||[]).push([[7464],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),p=i,f=u["".concat(s,".").concat(p)]||u[p]||m[p]||r;return t?a.createElement(f,o(o({ref:n},d),{},{components:t})):a.createElement(f,o({ref:n},d))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(7462),i=(t(7294),t(3905));const r={title:"WASM Calling C#",sidebar_position:2},o=void 0,l={unversionedId:"basics/linker",id:"basics/linker",title:"WASM Calling C#",description:'Once a WASM module has been instantiated WASM code can be executed in a completely contained "sandbox" - the WASM code cannot interact with anything outside of the box. This is excellent for ensuring security and determinism, but it does significantly limit the capabilities of WASM code. The Linker allows C# methods to be exposed to the sandbox, allowing WASM code to call it directly.',source:"@site/docs/basics/linker.md",sourceDirName:"basics",slug:"/basics/linker",permalink:"/wasmbox/basics/linker",draft:!1,editUrl:"https://github.com/Placeholder-Software/Wasmbox/tree/master/docs/basics/linker.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"WASM Calling C#",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Addressable Loading",permalink:"/wasmbox/basics/addressables"},next:{title:"WASI",permalink:"/wasmbox/basics/wasi"}},s={},c=[{value:"Limitations",id:"limitations",level:2},{value:"Example",id:"example",level:2},{value:"Defining Functions",id:"defining-functions",level:3},{value:"Defining WASI Features",id:"defining-wasi-features",level:3},{value:"Defining An Instance",id:"defining-an-instance",level:3},{value:"Defining A Module",id:"defining-a-module",level:3},{value:"WASI",id:"wasi",level:2}],d={toc:c};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,'Once a WASM module has been instantiated WASM code can be executed in a completely contained "sandbox" - the WASM code cannot interact with anything outside of the box. This is excellent for ensuring security and determinism, but it does significantly limit the capabilities of WASM code. The ',(0,i.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/linker"},(0,i.kt)("inlineCode",{parentName:"a"},"Linker"))," allows C# methods to be exposed to the sandbox, allowing WASM code to call it directly."),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("p",null,"todo:type limitations"),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"To add things to a ",(0,i.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/linker"},(0,i.kt)("inlineCode",{parentName:"a"},"Linker"))," simply ",(0,i.kt)("em",{parentName:"p"},"Define")," them. The simplest use case is directly adding a ",(0,i.kt)("a",{parentName:"p",href:"#add-a-function"},"C# function to call")," or adding a ",(0,i.kt)("a",{parentName:"p",href:"#define-a-wasi-feature"},"WASI feature"),". Alternatively complex systems can be assembled from multiple independent WASM modules by ",(0,i.kt)("a",{parentName:"p",href:"#add-another-instance"},"adding an Instance")," or ",(0,i.kt)("a",{parentName:"p",href:"#add-a-module"},"adding a Module"),"."),(0,i.kt)("h3",{id:"defining-functions"},"Defining Functions"),(0,i.kt)("p",null,"A C# function/method can be defined:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-clike"},'// Lambda function\nlinker.DefineFunction("module", "add", (int a, int b) => a + b);\n\n// Method\nlinker.DefineFunction("module", "sub", Subtract);\nstatic int Subtract(int a, int b)\n{\n    return a - b;\n}\n')),(0,i.kt)("h3",{id:"defining-wasi-features"},"Defining WASI Features"),(0,i.kt)("p",null,"A WASI feature (such as a random number generator) can be defined:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-clike"},"var rng = new CryptoRandomSource();\nlinker.Define(rng);\n")),(0,i.kt)("h3",{id:"defining-an-instance"},"Defining An Instance"),(0,i.kt)("p",null,"An ",(0,i.kt)("inlineCode",{parentName:"p"},"Instance")," can be defined, to add all of it's ",(0,i.kt)("em",{parentName:"p"},"exports")," for other WASM code to call:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-clike"},'Instance instance;\nLinker linker;\nlinker.DefineInstance(store, "the_name", instance);\n')),(0,i.kt)("h3",{id:"defining-a-module"},"Defining A Module"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-clike"},"Module module;\nLinker linker;\nlinker.DefineModule(store, module);\n")),(0,i.kt)("h2",{id:"wasi"},"WASI"),(0,i.kt)("p",null,"WASI is the ",(0,i.kt)("strong",{parentName:"p"},"WebAssembly System Interface"),". WASI is an API specification that provides access to several operating-system-like features such as filesystems, clocks, and random numbers which can all be added to the ",(0,i.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/linker"},(0,i.kt)("inlineCode",{parentName:"a"},"Linker"))," for WASM code to call directly. Read more about using WASI ",(0,i.kt)("a",{parentName:"p",href:"/wasmbox/basics/wasi"},(0,i.kt)("strong",{parentName:"a"},"here")),"."))}u.isMDXComponent=!0}}]);