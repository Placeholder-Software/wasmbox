"use strict";(self.webpackChunkwasmbox_docs=self.webpackChunkwasmbox_docs||[]).push([[4208],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),m=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=m(r),u=a,b=c["".concat(l,".").concat(u)]||c[u]||d[u]||o;return r?n.createElement(b,i(i({ref:t},p),{},{components:r})):n.createElement(b,i({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6091:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var n=r(7462),a=(r(7294),r(3905));const o={title:"Introduction To WebAssembly",sidebar_position:1},i=void 0,s={unversionedId:"getting_started/wasmintro",id:"getting_started/wasmintro",title:"Introduction To WebAssembly",description:"WebAssembly is a new type of low-level binary format, like assembly language, designed to be run in a virtual machine. Compiled languages such as C, C++ and Rust can be compiled directly to WebAssembly and run inside the sandbox, providing high performance, deterministic execution, portability across different platforms, and protection against malicious code.",source:"@site/docs/getting_started/wasmintro.md",sourceDirName:"getting_started",slug:"/getting_started/wasmintro",permalink:"/wasmbox/getting_started/wasmintro",draft:!1,editUrl:"https://github.com/Placeholder-Software/Wasmbox/tree/master/docs/getting_started/wasmintro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction To WebAssembly",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/wasmbox/category/getting-started"},next:{title:"Platform Support",permalink:"/wasmbox/getting_started/platforms"}},l={},m=[{value:"Getting Started",id:"getting-started",level:2},{value:"Compiling To WebAssembly",id:"compiling-to-webassembly",level:2}],p={toc:m};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/WebAssembly"},"WebAssembly")," is a new type of low-level binary format, like assembly language, designed to be run in a virtual machine. Compiled languages such as C, C++ and Rust can be compiled directly to WebAssembly and run inside the sandbox, providing high performance, deterministic execution, portability across different platforms, and protection against malicious code."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Wasmbox")," provides a complete WebAssembly runtime for Unity (based on the ",(0,a.kt)("a",{parentName:"p",href:"https://wasmtime.dev/"},"Wasmtime")," engine) which can be used to run non C# code on ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/wasmbox/getting_started/platforms"},"many platforms")),", to ",(0,a.kt)("strong",{parentName:"p"},"sandbox")," malicious or buggy code (e.g. mods) and to provide ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/wasmbox/advanced/determinism"},"deterministic execution"))," (e.g. lockstep multiplayer)."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"todo: list of wasmbox getting started tutorials"),(0,a.kt)("h2",{id:"compiling-to-webassembly"},"Compiling To WebAssembly"),(0,a.kt)("p",null,"todo: compiling"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/WebAssembly/C_to_wasm"},"C")," (emscripten?)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/WebAssembly/existing_C_to_wasm"},"C++")," (emscripten?)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/WebAssembly/Rust_to_wasm"},"Rust")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://wapm.io/"},"WAPM"))))}c.isMDXComponent=!0}}]);