"use strict";(self.webpackChunkwasmbox_docs=self.webpackChunkwasmbox_docs||[]).push([[6635],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=d(n),u=r,f=c["".concat(l,".").concat(u)]||c[u]||p[u]||o;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={title:"Engines, Modules, Stores & Instances \ud83d\ude35",sidebar_position:0},i=void 0,s={unversionedId:"reference/glossary",id:"reference/glossary",title:"Engines, Modules, Stores & Instances \ud83d\ude35",description:"There are several stages to go through in the process of taking a .wasm file and loading it into executable code. This document explains the stages and the various objects involved at a high level.",source:"@site/docs/reference/glossary.md",sourceDirName:"reference",slug:"/reference/glossary",permalink:"/wasmbox/reference/glossary",draft:!1,editUrl:"https://github.com/Placeholder-Software/Wasmbox/tree/master/docs/reference/glossary.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Engines, Modules, Stores & Instances \ud83d\ude35",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Reference Docs",permalink:"/wasmbox/category/reference-docs"},next:{title:"Code",permalink:"/wasmbox/category/code"}},l={},d=[{value:"Importing",id:"importing",level:2},{value:"In Editor",id:"in-editor",level:3},{value:"At Runtime",id:"at-runtime",level:3},{value:"Loading",id:"loading",level:2},{value:"Glossary",id:"glossary",level:2},{value:"LoadedModule",id:"loadedmodule",level:3},{value:"Store",id:"store",level:3},{value:"Linker",id:"linker",level:3},{value:"Instance",id:"instance",level:3},{value:"Generated Code",id:"generated-code",level:3}],m={toc:d};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"There are several stages to go through in the process of taking a ",(0,r.kt)("inlineCode",{parentName:"p"},".wasm")," file and loading it into executable code. This document explains the stages and the various objects involved at a high level."),(0,r.kt)("h2",{id:"importing"},"Importing"),(0,r.kt)("h3",{id:"in-editor"},"In Editor"),(0,r.kt)("p",null,"Wasmbox detects ",(0,r.kt)("inlineCode",{parentName:"p"},".wasm")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".wat")," files in your project and ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/editor/import"},"imports")," them to create a ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"WASM Asset"))," and ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/codegeneration"},"generated C# code"),"."),(0,r.kt)("mermaid",{value:'graph LR;\n    wasmfile[(.wasm file)]\n    watfile[(.wat file)]\n    importer{Importer}\n    wasmasset[(WASM Asset)]\n    generatedcode[Generated Code]\n\n    subgraph "Import (In Editor)"\n        direction LR\n        wasmfile & watfile --\x3e importer --\x3e wasmasset & generatedcode\n    end'}),(0,r.kt)("h3",{id:"at-runtime"},"At Runtime"),(0,r.kt)("p",null,"It is possible to load wasm or wat at runtime, without importing it in the editor, by using ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/dynamicwasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"DynamicWasmAsset"))," or even a custom implementation of ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/iwasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"IWasmAsset")),". All of these options produce something that can be used in the same way as an editor imported ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"WASM Asset")),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Runtime loading does not generate wrapper code.")),(0,r.kt)("mermaid",{value:'graph LR;\n    bytes[(wasm byte array)]\n    string[(wat string)]\n    dynamicasset[DynamicWasmAsset]\n\n    wasmasset[(WASM Asset)]\n\n    subgraph "Import (At Runtime)"\n        direction LR\n        bytes & string --\x3e dynamicasset --\x3e wasmasset\n    end'}),(0,r.kt)("h2",{id:"loading"},"Loading"),(0,r.kt)("p",null,"At runtime a WASM Asset must be loaded and configured before it can be called. This process is quite complicated, but Wasmbox includes helpers such as the ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/simplewasmmonobehaviour"},(0,r.kt)("inlineCode",{parentName:"a"},"SimpleWasmMonoBehaviour"))," which handle most of the steps for you."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"An ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/engineconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"EngineConfig"))," configures how the code will be compiled."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/engineconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"EngineConfig"))," is used to compile the ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"WASM Asset"))," into a ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/loadedmodule"},(0,r.kt)("inlineCode",{parentName:"a"},"LoadedModule")),"."),(0,r.kt)("li",{parentName:"ol"},"A ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmtime/store"},(0,r.kt)("inlineCode",{parentName:"a"},"Store"))," is created from the ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/engineconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"EngineConfig")),", to store all state."),(0,r.kt)("li",{parentName:"ol"},"A ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmtime/linker"},(0,r.kt)("inlineCode",{parentName:"a"},"Linker"))," is created from the ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/engineconfig"},(0,r.kt)("inlineCode",{parentName:"a"},"EngineConfig")),", to set what the WASM code can access."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmtime/store"},(0,r.kt)("inlineCode",{parentName:"a"},"Store")),", ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmtime/linker"},(0,r.kt)("inlineCode",{parentName:"a"},"Linker"))," & ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/loadedmodule"},(0,r.kt)("inlineCode",{parentName:"a"},"LoadedModule"))," are used to create an ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instance")),"."),(0,r.kt)("li",{parentName:"ol"},"Functions can be called on the ",(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instance")),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/wasmbox/reference/code/codegeneration"},"Generated C# code")," can be used to make this easier.")))),(0,r.kt)("mermaid",{value:"graph LR;\n    wasmasset[(WASM Asset)]\n    engineconfig[EngineConfig]\n    generatedcode[Generated Code]\n    loadedmodule[LoadedModule]\n    store[Store]\n    linker[Linker]\n    instance[Instance]\n    wasmcall{WASM Function Call}\n\n    subgraph Runtime\n        direction LR\n        engineconfig --\x3e loadedmodule & store & linker\n        wasmasset --\x3e loadedmodule\n        loadedmodule & store & linker --\x3e instance\n        generatedcode & instance --\x3e wasmcall\n    end"}),(0,r.kt)("h2",{id:"glossary"},"Glossary"),(0,r.kt)("h3",{id:"loadedmodule"},"LoadedModule"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/loadedmodule"},(0,r.kt)("inlineCode",{parentName:"a"},"LoadedModule"))," compiles the WASM code stored in a ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmasset"},(0,r.kt)("inlineCode",{parentName:"a"},"WASM Asset"))," into machine code that can be run on this machine. This process can take a lot of time (100ms or more) the first time it is done, but after that it is cached and should be nearly instantaneous."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The editor importer can ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/editor/import#4-compilation"},"precompile")," WASM code in the editor, which significantly speeds up loading at runtime.")),(0,r.kt)("h3",{id:"store"},"Store"),(0,r.kt)("p",null,"A WASM ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instance"))," has no state (i.e. memory), instead it is all contained within the ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/store"},(0,r.kt)("inlineCode",{parentName:"a"},"Store")),". A ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/store"},(0,r.kt)("inlineCode",{parentName:"a"},"Store"))," may be shared between multiple ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instances")),"."),(0,r.kt)("h3",{id:"linker"},"Linker"),(0,r.kt)("p",null,'By default WASM execution is completely "sandboxed", executing WASM code cannot access anything outside of the box. This makes it safe to run malicious code, and easy to ensure ',(0,r.kt)("a",{parentName:"p",href:"/wasmbox/advanced/determinism"},"determinism"),". The ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/linker"},(0,r.kt)("inlineCode",{parentName:"a"},"Linker"))," allows you to expose certain C# methods to WASM code, allowing it to call those methods. For example ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/basics/wasi/"},"WASI")," features."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'int Add(int a, int b)\n{\n    return a + b;\n}\n\n// Allow WASM to call `Add` as `myfunctions::add`\nlinker.DefineFunction("myfunctions", "add", Add);\n')),(0,r.kt)("h3",{id:"instance"},"Instance"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instance"))," is the final step which allows you to call WASM code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var add = instance.GetFunction<int, int, int>("Add");\nvar result = add(1, 2);\nDebug.Assert(result == 3);\n')),(0,r.kt)("h3",{id:"generated-code"},"Generated Code"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instance"))," is a low level API that is often not very convenient to use directly. The Wasmbox editor importer can ",(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/editor/import#6-code-generation"},"generate code"),' which "wraps" an ',(0,r.kt)("a",{parentName:"p",href:"/wasmbox/reference/code/wasmtime/instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Instance"))," and makes it much more convenient (and efficient) to use."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using (var wrapper = new GeneratedWrapper(instance, store))\n{\n    var result = wrapper.Add(1, 2);\n    Debug.Assert(result == 3);\n}\n")))}c.isMDXComponent=!0}}]);