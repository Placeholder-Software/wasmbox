"use strict";(self.webpackChunkwasmbox_docs=self.webpackChunkwasmbox_docs||[]).push([[2916],{3765:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/v10.0.0","metadata":{"permalink":"/wasmbox/releases/v10.0.0","source":"@site/release_notes/v10.0.0.md","title":"v10.0.0","description":"This version of Wasmbox upgrades to Wasmtime v10.0.0.","date":"2023-07-06T00:00:00.000Z","formattedDate":"July 6, 2023","tags":[],"readingTime":1.285,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2023-07-06T00:00:00.000Z"},"nextItem":{"title":"v11.0.0","permalink":"/wasmbox/releases/v11.0.0"}},"content":"import * as links from \\"@site/src/components/links.js\\"\\n\\nThis version of Wasmbox upgrades to `Wasmtime v10.0.0`.\\n\\n### Asynchronous Execution!\\n\\nThis version of Wasmbox introduces a major new feature; [**async execution**](/advanced/asyncify).\\n\\n\x3c!--truncate--\x3e\\n\\nClicking the new \\"asyncify\\" checkbox [on the importer](/reference/editor/import/#3-transformation) will automatically transform the imported WASM code to support async execution. This allows executing code to be suspended in one frame and resumed on another frame, or even moved to the Unity job system so that it executes on another thread.\\n\\n:::tip\\n\\nCheck out the two new demo scenes, [`async demo`](/getting_started/demos/async) and [`async jobs demo`](/getting_started/demos/async_job), to see how to use this powerful feature!\\n\\n:::\\n\\n### Importer Speedup\\n\\nIn previous versions of Wasmbox importing `.wasm` and `.wat` files could be quite slow, around 30 seconds per file. Once you have a large collection of `.wasm`/`.wat` files in your project (for example our test project has over 100 wasm files) a full reimport could take a _very_ long time! This has now been fixed - imports are around **100x faster** for most files in this version.\\n\\n### Feedback\\n\\nWasmbox is very new, so it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to <links.Discord /> or the <links.IssueTracker />.\\n\\n\x3c!--truncate--\x3e\\n\\n## Features \ud83d\ude80\\n\\n - Wasmtime [v10.0.0](https://github.com/bytecodealliance/wasmtime/blob/main/RELEASES.md#1000)\\n - Wasmtime-dotnet [v10.0.0](https://github.com/bytecodealliance/wasmtime-dotnet/releases/tag/v10.0.0)\\n - Added support for async execution of WASM (suspend/resume)\\n  - Suspended code can be moved to a job to execute off the main thread\\n\\n## Bugfixes \ud83d\udc1b\\n\\n - Fixed player build not compiling on some platforms.\\n - Vast improvement to WAT/WASM file importer speed (100x or more)"},{"id":"/v11.0.0","metadata":{"permalink":"/wasmbox/releases/v11.0.0","source":"@site/release_notes/v11.0.0.md","title":"v11.0.0","description":"This version of Wasmbox upgrades to Wasmtime v11.0.0.","date":"2023-07-06T00:00:00.000Z","formattedDate":"July 6, 2023","tags":[],"readingTime":0.78,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2023-07-06T00:00:00.000Z"},"prevItem":{"title":"v10.0.0","permalink":"/wasmbox/releases/v10.0.0"},"nextItem":{"title":"v9.0.0","permalink":"/wasmbox/releases/v9.0.0"}},"content":"import * as links from \\"@site/src/components/links.js\\"\\n\\nThis version of Wasmbox upgrades to `Wasmtime v11.0.0`.\\n\\n### Zip File Mounting.\\n\\nThis version of Wasmbox introduces the ability to mount a zip archive as a read-only filesystem.\\n\\n\x3c!--truncate--\x3e\\n\\nCalling the new `MapReadonlyZipArchiveDirectory` method with the path to a zip archive will mount that entire zip archive as a read-only directory. This can be useful to distribute static content with your application as a single zip archive, which can then be easily mounted as read by wasm code.\\n\\n:::tip\\n\\nZip Archives are **read only** and must not be modified while mounted.\\n\\n:::\\n\\n### Feedback\\n\\nWasmbox is very new, so it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to <links.Discord /> or the <links.IssueTracker />.\\n\\n\x3c!--truncate--\x3e\\n\\n## Features \ud83d\ude80\\n\\n - Wasmtime [v11.0.0](https://github.com/bytecodealliance/wasmtime/blob/main/RELEASES.md#1100)\\n - Wasmtime-dotnet [v11.0.0](https://github.com/bytecodealliance/wasmtime-dotnet/releases/tag/v11.0.0)\\n - Added support for mounting a zip archive.\\n - Improved error reporting when an invalid wasm file is imported."},{"id":"/v9.0.0","metadata":{"permalink":"/wasmbox/releases/v9.0.0","source":"@site/release_notes/v9.0.0.md","title":"v9.0.0","description":"This version of Wasmbox upgrades to Wasmtime v9.0.1.","date":"2023-05-24T00:00:00.000Z","formattedDate":"May 24, 2023","tags":[],"readingTime":0.975,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2023-05-24T00:00:00.000Z"},"prevItem":{"title":"v11.0.0","permalink":"/wasmbox/releases/v11.0.0"},"nextItem":{"title":"v8.0.0","permalink":"/wasmbox/releases/v8.0.0"}},"content":"import * as links from \\"@site/src/components/links.js\\"\\n\\nThis version of Wasmbox upgrades to `Wasmtime v9.0.1`.\\n\\nThe new `IVirtualSocket` interface introduced in Wasmbox adds support for the Wasi-Socket proposal. The only implementation currently included in Wasmbox (`NonFunctionalSocket`) does _not_ provide network connectivity, instead it always acts as if it is not connected to a network. This can be useful when a large compiled WASM program imports sockets, but you do not actually need networking connectivity for your use case.\\n\\nWasmbox is very new, so it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to <links.Discord /> or the <links.IssueTracker />.\\n\\n\x3c!--truncate--\x3e\\n\\n## Features \ud83d\ude80\\n\\n - Wasmtime [v9.0.1](https://github.com/bytecodealliance/wasmtime/blob/main/RELEASES.md#900)\\n - Wasmtime-dotnet [v9.0.1](https://github.com/bytecodealliance/wasmtime-dotnet/releases/tag/v9.0.1)\\n   - Added `Store.SetLimits` which adds hard limits on the amount of memory that can be consumed by WASM.\\n - Added a `IVirtualSocket`, representing WASI socket support.\\n - Added `NonFunctionalSocket`, an implementation of `IVirtualSocket` which acts as if it is not connected to a network.\\n - Modified WASI interfaces to use `ref`,`out` and `Span<T>` parameters where possible instead of `Pointer<T>` and `Buffer<T>`. This significantly improves the user experience when interacting with these interfaces from _non_ WASM code.\\n\\n## Bugfixes \ud83d\udc1b\\n\\n - None."},{"id":"/v8.0.0","metadata":{"permalink":"/wasmbox/releases/v8.0.0","source":"@site/release_notes/v8.0.0.md","title":"v8.0.0","description":"This is the first update of Wasmbox. Wasmbox is very new, so it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to  or the .","date":"2023-04-24T00:00:00.000Z","formattedDate":"April 24, 2023","tags":[],"readingTime":0.66,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2023-04-24T00:00:00.000Z"},"prevItem":{"title":"v9.0.0","permalink":"/wasmbox/releases/v9.0.0"},"nextItem":{"title":"v1.0.0","permalink":"/wasmbox/releases/v1.0.0"}},"content":"import * as links from \\"@site/src/components/links.js\\"\\n\\nThis is the first update of Wasmbox. Wasmbox is very new, so it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to <links.Discord /> or the <links.IssueTracker />.\\n\\n### What Happened to Version `2.0.0` -> `7.0.0`?\\n\\nThe [previous version](./v1.0.0.md) of Wasmbox was `1.0.0` and this is version `8.0.0`. This is because we are adopting the same [version/release scheme as Wasmtime](https://docs.wasmtime.dev/stability-release.html). Each month Wasmtime releases a new major version, Wasmbox will then be updated to use that version and will use the same major version number.\\n\\n\x3c!--truncate--\x3e\\n\\n## Features \ud83d\ude80\\n\\n - Wasmtime [v8.0.0](https://github.com/bytecodealliance/wasmtime/blob/main/RELEASES.md#800)\\n - Wasmtime-dotnet [v8.0.0](https://github.com/bytecodealliance/wasmtime-dotnet/releases/tag/v8.0.0)\\n   - Caching `Function` objects\\n   - Caching `Function` wrappers\\n   - Caching `Global` objects\\n   - Caching `Global` wrappers\\n   - Caching `Memory` objects\\n\\n## Bugfixes \ud83d\udc1b\\n\\n - None."},{"id":"/v1.0.0","metadata":{"permalink":"/wasmbox/releases/v1.0.0","source":"@site/release_notes/v1.0.0.md","title":"v1.0.0","description":"The first release of Wasmbox! Since this is the very first release it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to  or the .","date":"2023-04-07T00:00:00.000Z","formattedDate":"April 7, 2023","tags":[],"readingTime":0.345,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2023-04-07T00:00:00.000Z"},"prevItem":{"title":"v8.0.0","permalink":"/wasmbox/releases/v8.0.0"}},"content":"import * as links from \\"@site/src/components/links.js\\"\\n\\nThe first release of Wasmbox! Since this is the very first release it is likely you will encounter bugs, awkward APIs or missing features. Please direct feedback to <links.Discord /> or the <links.IssueTracker />.\\n\\n\x3c!--truncate--\x3e\\n\\n## Features \ud83d\ude80\\n\\n - Wasmtime based WASM runtime for Unity.\\n - Custom WASI implementation.\\n - Optimising import pipeline.\\n - Unity [Job System](https://docs.unity3d.com/Manual/JobSystem.html) compatible.\\n\\n## Bugfixes \ud83d\udc1b\\n\\n - None."}]}')}}]);